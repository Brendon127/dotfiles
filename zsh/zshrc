# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH="/home/brendon/.oh-my-zsh"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="custom"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  colored-man-pages
  docker
  docker-compose
)


source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
################################################################
# Custom Alias
################################################################
#

# source ./env


# Change cursor shape for different vi modes.

alias vim="nvim"
alias vi="nvim"
alias subl="subl3"

#class codes
alias cos301="cd ~/documents/uni/cos301"
alias cos330="cd ~/documents/uni/cos330"
alias cos326="cd ~/documents/uni/cos326"
alias cos333="cd ~/documents/uni/cos333"
alias cos110="cd ~/documents/uni/cos110"
alias dot="cd ~/.dotfiles"

alias capstone="cd ~/documents/uni/cos301/capstone/"

export capstone=~/documents/uni/cos301/capstone/
export c301=~/documents/uni/cos301
export c330=~/documents/uni/cos330
export c326=~/documents/uni/cos326
export c333=~/documents/uni/cos333
export c110=~/documents/uni/cos110

export dot=~/.dotfiles/
export media=/run/media/brendon


# config file variables
export vrc=~/.dotfiles/vim/nvimrc
export zrc=~/.dotfiles/zsh/zshrc
export PATH=/opt/cuda/bin:$PATH # cuda path
#l after cd

# function  cd {
#     builtin cd "$@" && ls 
#     }

# open application with defualt app
alias open="xdg-open"
# Create new flashcard template
alias flashcards="cp /opt/flashcards/flashcards.ods ./f.ods"

################################################
# git aliases
###############################################
alias gs='git status '
alias ga='git add '
alias gb='git branch '
# alias gc='git commit'
alias gd='git diff'
alias go='git checkout '

function cleanup() {
	echo $1;
	CONTAINS_LOGS=($(grep -r -n --include \*.ts console.log  | cut -d: -f1 | uniq | tail -n 3))
	for file in $CONTAINS_LOGS
	do
		vim $file
		git add $file
	done
}

################################################
# application aliases
###############################################
alias r='ranger'
alias v='nvim'
alias z='zathura --fork'
alias t='urxvt 2> /dev/null &|'
alias o='okular'
###############################################
#
#
#
#
#
################################################
# IONIC + Android
###############################################
#
export PATH=$PATH:/opt/gradle-5.1.1/bin
export ANDROID_SDK_ROOT=~/android/Sdk/ 
export ANDROID_HOME=/home/brendon/android/Sdk
export JAVA_HOME=/usr/lib/jvm/default

export PATH=$PATH:/home/brendon/.dotfiles/scripts/bluetooth
export PATH=/opt/android-sdk/platform-tools/:$PATH

export TERMINAL=urxvt
################################################
# SCRIPTS FOLDER
###############################################
# 
###############################################
#
#
################################################
# VIM MODE 
###############################################
bindkey -v
export KEYTIMEOUT=1

bindkey '^K' up-line-or-search
bindkey '^J' down-line-or-search
bindkey -v '^?' backward-delete-char
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    # zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.


################################################
# MISC FUNCTIONS
###############################################
function fitchClean() {
	grep regex $1 | sed -e 's/\^\(.*\)\$/\1/' | cut -d'=' -f2 > memo_cleaned.txt
}

